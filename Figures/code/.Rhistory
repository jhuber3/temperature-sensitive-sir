time = seq(from = 0, to = 365, by = 0.01)
vals = 5 * sin((2*pi / 365) * t) + 25
vals = 5 * sin((2*pi / 365) * time) + 25
plot(time, vals)
mean(vals)
suitability.Delhi
mean.Delhi
range.Delhi
I.cummulative.zero.meantemp[264, 96]
suitability.Delhi = c(I.cummulative.zero.mintemp[which(oscillation.temp == round(mean.Delhi, 1)), which(amplitude == round(mean.Delhi,1))],
I.cummulative.zero.meantemp[which(oscillation.temp == round(mean.Delhi, 1)), which(amplitude == round(mean.Delhi,1))],
I.cummulative.zero.maxtemp[which(oscillation.temp == round(mean.Delhi, 1)), which(amplitude == round(mean.Delhi,1))],
I.cummulative.twenty[which(oscillation.temp == round(mean.Delhi, 1)), which(amplitude == round(mean.Delhi,1))],
I.cummulative.forty[which(oscillation.temp == round(mean.Delhi, 1)), which(amplitude == round(mean.Delhi,1))],
I.cummulative.sixty[which(oscillation.temp == round(mean.Delhi, 1)), which(amplitude == round(mean.Delhi,1))],
I.cummulative.eighty[which(oscillation.temp == round(mean.Delhi, 1)), which(amplitude == round(mean.Delhi,1))])
suitability.Delhi
suitability.Delhi = c(I.cummulative.zero.mintemp[round(mean.Delhi, 1) * 10 + 1, round(range.Delhi) * 10 + 1],
I.cummulative.zero.meantemp[round(mean.Delhi, 1) * 10 + 1, round(range.Delhi) * 10 + 1],
I.cummulative.zero.maxtemp[round(mean.Delhi, 1) * 10 + 1, round(range.Delhi) * 10 + 1],
I.cummulative.twenty[round(mean.Delhi, 1) * 10 + 1, round(range.Delhi) * 10 + 1],
I.cummulative.forty[round(mean.Delhi, 1) * 10 + 1, round(range.Delhi) * 10 + 1],
I.cummulative.sixty[round(mean.Delhi, 1) * 10 + 1, round(range.Delhi) * 10 + 1],
I.cummulative.eighty[round(mean.Delhi, 1) * 10 + 1, round(range.Delhi) * 10 + 1])
suitability.Delhi
mean.Delhi
round(mean.Delhi, 1) * 10 + 1
suitability.Delhi = c(I.cummulative.zero.mintemp[round(mean.Delhi, 1) * 10 + 1, round(range.Delhi) * 10 + 1],
I.cummulative.zero.meantemp[round(mean.Delhi, 1) * 10 + 1, round(range.Delhi) * 10 + 1],
I.cummulative.zero.maxtemp[round(mean.Delhi, 1) * 10 + 1, round(range.Delhi) * 10 + 1],
I.cummulative.twenty[round(mean.Delhi, 1) * 10 + 1, round(range.Delhi) * 10 + 1],
I.cummulative.forty[round(mean.Delhi, 1) * 10 + 1, round(range.Delhi) * 10 + 1],
I.cummulative.sixty[round(mean.Delhi, 1) * 10 + 1, round(range.Delhi) * 10 + 1],
I.cummulative.eighty[round(mean.Delhi, 1) * 10 + 1, round(range.Delhi) * 10 + 1])
suitability.Delhi
I.cummulative.zero.meantemp[264, 96]
round(range.Delhi) * 10 + 1
## compute epidemic suitability
suitability.BuenosAires = c(I.cummulative.zero.mintemp[which(oscillation.temp == round(mean.BuenosAires, 1)), which(amplitude == round(range.BuenosAires,1))],
I.cummulative.zero.meantemp[which(oscillation.temp == round(mean.BuenosAires, 1)), which(amplitude == round(range.BuenosAires,1))],
I.cummulative.zero.maxtemp[which(oscillation.temp == round(mean.BuenosAires, 1)), which(amplitude == round(range.BuenosAires,1))],
I.cummulative.twenty[which(oscillation.temp == round(mean.BuenosAires, 1)), which(amplitude == round(range.BuenosAires,1))],
I.cummulative.forty[which(oscillation.temp == round(mean.BuenosAires, 1)), which(amplitude == round(range.BuenosAires,1))],
I.cummulative.sixty[which(oscillation.temp == round(mean.BuenosAires, 1)), which(amplitude == round(range.BuenosAires,1))],
I.cummulative.eighty[which(oscillation.temp == round(mean.BuenosAires, 1)), which(amplitude == round(range.BuenosAires,1))])
suitability.SaoPaulo = c(I.cummulative.zero.mintemp[which(oscillation.temp == round(mean.SaoPaulo, 1)), which(amplitude == round(range.SaoPaulo,1))],
I.cummulative.zero.meantemp[which(oscillation.temp == round(mean.SaoPaulo, 1)), which(amplitude == round(range.SaoPaulo,1))],
I.cummulative.zero.maxtemp[which(oscillation.temp == round(mean.SaoPaulo, 1)), which(amplitude == round(range.SaoPaulo,1))],
I.cummulative.twenty[which(oscillation.temp == round(mean.SaoPaulo, 1)), which(amplitude == round(range.SaoPaulo,1))],
I.cummulative.forty[which(oscillation.temp == round(mean.SaoPaulo, 1)), which(amplitude == round(range.SaoPaulo,1))],
I.cummulative.sixty[which(oscillation.temp == round(mean.SaoPaulo, 1)), which(amplitude == round(range.SaoPaulo,1))],
I.cummulative.eighty[which(oscillation.temp == round(mean.SaoPaulo, 1)), which(amplitude == round(range.SaoPaulo,1))])
suitability.Rio = c(I.cummulative.zero.mintemp[which(oscillation.temp == round(mean.Rio, 1)), which(amplitude == round(range.Rio,1))],
I.cummulative.zero.meantemp[which(oscillation.temp == round(mean.Rio, 1)), which(amplitude == round(range.Rio,1))],
I.cummulative.zero.maxtemp[which(oscillation.temp == round(mean.Rio, 1)), which(amplitude == round(range.Rio,1))],
I.cummulative.twenty[which(oscillation.temp == round(mean.Rio, 1)), which(amplitude == round(range.Rio,1))],
I.cummulative.forty[which(oscillation.temp == round(mean.Rio, 1)), which(amplitude == round(range.Rio,1))],
I.cummulative.sixty[which(oscillation.temp == round(mean.Rio, 1)), which(amplitude == round(range.Rio,1))],
I.cummulative.eighty[which(oscillation.temp == round(mean.Rio, 1)), which(amplitude == round(range.Rio,1))])
suitability.Salvador = c(I.cummulative.zero.mintemp[which(oscillation.temp == round(mean.Salvador, 1)), which(amplitude == round(range.Salvador,1))],
I.cummulative.zero.meantemp[which(oscillation.temp == round(mean.Salvador, 1)), which(amplitude == round(range.Salvador,1))],
I.cummulative.zero.maxtemp[which(oscillation.temp == round(mean.Salvador, 1)), which(amplitude == round(range.Salvador,1))],
I.cummulative.twenty[which(oscillation.temp == round(mean.Salvador, 1)), which(amplitude == round(range.Salvador,1))],
I.cummulative.forty[which(oscillation.temp == round(mean.Salvador, 1)), which(amplitude == round(range.Salvador,1))],
I.cummulative.sixty[which(oscillation.temp == round(mean.Salvador, 1)), which(amplitude == round(range.Salvador,1))],
I.cummulative.eighty[which(oscillation.temp == round(mean.Salvador, 1)), which(amplitude == round(range.Salvador,1))])
suitability.Fortaleza = c(I.cummulative.zero.mintemp[which(oscillation.temp == round(mean.Fortaleza, 1)), which(amplitude == round(range.Fortaleza,1))],
I.cummulative.zero.meantemp[which(oscillation.temp == round(mean.Fortaleza, 1)), which(amplitude == round(range.Fortaleza,1))],
I.cummulative.zero.maxtemp[which(oscillation.temp == round(mean.Fortaleza, 1)), which(amplitude == round(range.Fortaleza,1))],
I.cummulative.twenty[which(oscillation.temp == round(mean.Fortaleza, 1)), which(amplitude == round(range.Fortaleza,1))],
I.cummulative.forty[which(oscillation.temp == round(mean.Fortaleza, 1)), which(amplitude == round(range.Fortaleza,1))],
I.cummulative.sixty[which(oscillation.temp == round(mean.Fortaleza, 1)), which(amplitude == round(range.Fortaleza,1))],
I.cummulative.eighty[which(oscillation.temp == round(mean.Fortaleza, 1)), which(amplitude == round(range.Fortaleza,1))])
suitability.BeloHorizonte = c(I.cummulative.zero.mintemp[round(mean.BeloHorizonte, 1) * 10 + 1, round(range.BeloHorizonte,1) * 10 + 1],
I.cummulative.zero.meantemp[round(mean.BeloHorizonte, 1) * 10 + 1, round(range.BeloHorizonte,1) * 10 + 1],
I.cummulative.zero.maxtemp[round(mean.BeloHorizonte, 1) * 10 + 1, round(range.BeloHorizonte,1) * 10 + 1],
I.cummulative.twenty[round(mean.BeloHorizonte, 1) * 10 + 1, round(range.BeloHorizonte,1) * 10 + 1],
I.cummulative.forty[round(mean.BeloHorizonte, 1) * 10 + 1, round(range.BeloHorizonte,1) * 10 + 1],
I.cummulative.sixty[round(mean.BeloHorizonte, 1) * 10 + 1, round(range.BeloHorizonte,1) * 10 + 1],
I.cummulative.eighty[round(mean.BeloHorizonte, 1) * 10 + 1, round(range.BeloHorizonte,1) * 10 + 1])
suitability.Recife = c(I.cummulative.zero.mintemp[round(mean.Recife, 1) * 10 + 1, round(range.Recife,1) * 10 + 1],
I.cummulative.zero.meantemp[round(mean.Recife, 1) * 10 + 1, round(range.Recife,1) * 10 + 1],
I.cummulative.zero.maxtemp[round(mean.Recife, 1) * 10 + 1, round(range.Recife,1) * 10 + 1],
I.cummulative.twenty[round(mean.Recife, 1) * 10 + 1, round(range.Recife,1) * 10 + 1],
I.cummulative.forty[round(mean.Recife, 1) * 10 + 1, round(range.Recife,1) * 10 + 1],
I.cummulative.sixty[round(mean.Recife, 1) * 10 + 1, round(range.Recife,1) * 10 + 1],
I.cummulative.eighty[round(mean.Recife, 1) * 10 + 1, round(range.Recife,1) * 10 + 1])
suitability.Shanghai = c(I.cummulative.zero.mintemp[which(oscillation.temp == round(mean.Shanghai, 1)), which(amplitude == round(range.Shanghai,1))],
I.cummulative.zero.meantemp[which(oscillation.temp == round(mean.Shanghai, 1)), which(amplitude == round(range.Shanghai,1))],
I.cummulative.zero.maxtemp[which(oscillation.temp == round(mean.Shanghai, 1)), which(amplitude == round(range.Shanghai,1))],
I.cummulative.twenty[which(oscillation.temp == round(mean.Shanghai, 1)), which(amplitude == round(range.Shanghai,1))],
I.cummulative.forty[which(oscillation.temp == round(mean.Shanghai, 1)), which(amplitude == round(range.Shanghai,1))],
I.cummulative.sixty[which(oscillation.temp == round(mean.Shanghai, 1)), which(amplitude == round(range.Shanghai,1))],
I.cummulative.eighty[which(oscillation.temp == round(mean.Shanghai, 1)), which(amplitude == round(range.Shanghai,1))])
suitability.Beijing = c(I.cummulative.zero.mintemp[which(oscillation.temp == round(mean.Beijing, 1)), which(amplitude == round(range.Beijing,1))],
I.cummulative.zero.meantemp[which(oscillation.temp == round(mean.Beijing, 1)), which(amplitude == round(range.Beijing,1))],
I.cummulative.zero.maxtemp[which(oscillation.temp == round(mean.Beijing, 1)), which(amplitude == round(range.Beijing,1))],
I.cummulative.twenty[which(oscillation.temp == round(mean.Beijing, 1)), which(amplitude == round(range.Beijing,1))],
I.cummulative.forty[which(oscillation.temp == round(mean.Beijing, 1)), which(amplitude == round(range.Beijing,1))],
I.cummulative.sixty[which(oscillation.temp == round(mean.Beijing, 1)), which(amplitude == round(range.Beijing,1))],
I.cummulative.eighty[which(oscillation.temp == round(mean.Beijing, 1)), which(amplitude == round(range.Beijing,1))])
suitability.Guangzhou = c(I.cummulative.zero.mintemp[round(mean.Guangzhou, 1) * 10 + 1, round(range.Guangzhou,1) * 10 + 1],
I.cummulative.zero.meantemp[round(mean.Guangzhou, 1) * 10 + 1, round(range.Guangzhou,1) * 10 + 1],
I.cummulative.zero.maxtemp[round(mean.Guangzhou, 1) * 10 + 1, round(range.Guangzhou,1) * 10 + 1],
I.cummulative.twenty[round(mean.Guangzhou, 1) * 10 + 1, round(range.Guangzhou,1) * 10 + 1],
I.cummulative.forty[round(mean.Guangzhou, 1) * 10 + 1, round(range.Guangzhou,1) * 10 + 1],
I.cummulative.sixty[round(mean.Guangzhou, 1) * 10 + 1, round(range.Guangzhou,1) * 10 + 1],
I.cummulative.eighty[round(mean.Guangzhou, 1) * 10 + 1, round(range.Guangzhou,1) * 10 + 1])
suitability.Bogota = c(I.cummulative.zero.mintemp[round(mean.Bogota, 1) * 10 + 1, round(range.Bogota,1) * 10 + 1],
I.cummulative.zero.meantemp[round(mean.Bogota, 1) * 10 + 1, round(range.Bogota,1) * 10 + 1],
I.cummulative.zero.maxtemp[round(mean.Bogota, 1) * 10 + 1, round(range.Bogota,1) * 10 + 1],
I.cummulative.twenty[round(mean.Bogota, 1) * 10 + 1, round(range.Bogota,1) * 10 + 1],
I.cummulative.forty[round(mean.Bogota, 1) * 10 + 1, round(range.Bogota,1) * 10 + 1],
I.cummulative.sixty[round(mean.Bogota, 1) * 10 + 1, round(range.Bogota,1) * 10 + 1],
I.cummulative.eighty[round(mean.Bogota, 1) * 10 + 1, round(range.Bogota,1) * 10 + 1])
suitability.Medellin = c(I.cummulative.zero.mintemp[round(mean.Medellin, 1) * 10 + 1, round(range.Medellin,1) * 10 + 1],
I.cummulative.zero.meantemp[round(mean.Medellin, 1) * 10 + 1, round(range.Medellin,1) * 10 + 1],
I.cummulative.zero.maxtemp[round(mean.Medellin, 1) * 10 + 1, round(range.Medellin,1) * 10 + 1],
I.cummulative.twenty[round(mean.Medellin, 1) * 10 + 1, round(range.Medellin,1) * 10 + 1],
I.cummulative.forty[round(mean.Medellin, 1) * 10 + 1, round(range.Medellin,1) * 10 + 1],
I.cummulative.sixty[round(mean.Medellin, 1) * 10 + 1, round(range.Medellin,1) * 10 + 1],
I.cummulative.eighty[round(mean.Medellin, 1) * 10 + 1, round(range.Medellin,1) * 10 + 1])
suitability.Cali = c(I.cummulative.zero.mintemp[which(oscillation.temp == round(mean.Cali, 1)), which(amplitude == round(range.Cali,1))],
I.cummulative.zero.meantemp[which(oscillation.temp == round(mean.Cali, 1)), which(amplitude == round(range.Cali,1))],
I.cummulative.zero.maxtemp[which(oscillation.temp == round(mean.Cali, 1)), which(amplitude == round(range.Cali,1))],
I.cummulative.twenty[which(oscillation.temp == round(mean.Cali, 1)), which(amplitude == round(range.Cali,1))],
I.cummulative.forty[which(oscillation.temp == round(mean.Cali, 1)), which(amplitude == round(range.Cali,1))],
I.cummulative.sixty[which(oscillation.temp == round(mean.Cali, 1)), which(amplitude == round(range.Cali,1))],
I.cummulative.eighty[which(oscillation.temp == round(mean.Cali, 1)), which(amplitude == round(range.Cali,1))])
suitability.Barranquilla = c(I.cummulative.zero.mintemp[which(oscillation.temp == round(mean.Barranquilla, 1)), which(amplitude == round(range.Barranquilla,1))],
I.cummulative.zero.meantemp[which(oscillation.temp == round(mean.Barranquilla, 1)), which(amplitude == round(range.Barranquilla,1))],
I.cummulative.zero.maxtemp[which(oscillation.temp == round(mean.Barranquilla, 1)), which(amplitude == round(range.Barranquilla,1))],
I.cummulative.twenty[which(oscillation.temp == round(mean.Barranquilla, 1)), which(amplitude == round(range.Barranquilla,1))],
I.cummulative.forty[which(oscillation.temp == round(mean.Barranquilla, 1)), which(amplitude == round(range.Barranquilla,1))],
I.cummulative.sixty[which(oscillation.temp == round(mean.Barranquilla, 1)), which(amplitude == round(range.Barranquilla,1))],
I.cummulative.eighty[which(oscillation.temp == round(mean.Barranquilla, 1)), which(amplitude == round(range.Barranquilla,1))])
suitability.Cartagena = c(I.cummulative.zero.mintemp[which(oscillation.temp == round(mean.Cartagena, 1)), which(amplitude == round(range.Cartagena,1))],
I.cummulative.zero.meantemp[which(oscillation.temp == round(mean.Cartagena, 1)), which(amplitude == round(range.Cartagena,1))],
I.cummulative.zero.maxtemp[which(oscillation.temp == round(mean.Cartagena, 1)), which(amplitude == round(range.Cartagena,1))],
I.cummulative.twenty[which(oscillation.temp == round(mean.Cartagena, 1)), which(amplitude == round(range.Cartagena,1))],
I.cummulative.forty[which(oscillation.temp == round(mean.Cartagena, 1)), which(amplitude == round(range.Cartagena,1))],
I.cummulative.sixty[which(oscillation.temp == round(mean.Cartagena, 1)), which(amplitude == round(range.Cartagena,1))],
I.cummulative.eighty[which(oscillation.temp == round(mean.Cartagena, 1)), which(amplitude == round(range.Cartagena,1))])
suitability.Delhi = c(I.cummulative.zero.mintemp[round(mean.Delhi, 1) * 10 + 1, round(range.Delhi,1) * 10 + 1],
I.cummulative.zero.meantemp[round(mean.Delhi, 1) * 10 + 1, round(range.Delhi,1) * 10 + 1],
I.cummulative.zero.maxtemp[round(mean.Delhi, 1) * 10 + 1, round(range.Delhi,1) * 10 + 1],
I.cummulative.twenty[round(mean.Delhi, 1) * 10 + 1, round(range.Delhi,1) * 10 + 1],
I.cummulative.forty[round(mean.Delhi, 1) * 10 + 1, round(range.Delhi,1) * 10 + 1],
I.cummulative.sixty[round(mean.Delhi, 1) * 10 + 1, round(range.Delhi,1) * 10 + 1],
I.cummulative.eighty[round(mean.Delhi, 1) * 10 + 1, round(range.Delhi,1) * 10 + 1])
suitability.Tokyo = c(I.cummulative.zero.mintemp[which(oscillation.temp == round(mean.Tokyo, 1)), which(amplitude == round(range.Tokyo,1))],
I.cummulative.zero.meantemp[which(oscillation.temp == round(mean.Tokyo, 1)), which(amplitude == round(range.Tokyo,1))],
I.cummulative.zero.maxtemp[which(oscillation.temp == round(mean.Tokyo, 1)), which(amplitude == round(range.Tokyo,1))],
I.cummulative.twenty[which(oscillation.temp == round(mean.Tokyo, 1)), which(amplitude == round(range.Tokyo,1))],
I.cummulative.forty[which(oscillation.temp == round(mean.Tokyo, 1)), which(amplitude == round(range.Tokyo,1))],
I.cummulative.sixty[which(oscillation.temp == round(mean.Tokyo, 1)), which(amplitude == round(range.Tokyo,1))],
I.cummulative.eighty[which(oscillation.temp == round(mean.Tokyo, 1)), which(amplitude == round(range.Tokyo,1))])
suitability.Kobe = c(I.cummulative.zero.mintemp[round(mean.Kobe, 1) * 10 + 1, round(range.Kobe,1) * 10 + 1],
I.cummulative.zero.meantemp[round(mean.Kobe, 1) * 10 + 1, round(range.Kobe,1) * 10 + 1],
I.cummulative.zero.maxtemp[round(mean.Kobe, 1) * 10 + 1, round(range.Kobe,1) * 10 + 1],
I.cummulative.twenty[round(mean.Kobe, 1) * 10 + 1, round(range.Kobe,1) * 10 + 1],
I.cummulative.forty[round(mean.Kobe, 1) * 10 + 1, round(range.Kobe,1) * 10 + 1],
I.cummulative.sixty[round(mean.Kobe, 1) * 10 + 1, round(range.Kobe,1) * 10 + 1],
I.cummulative.eighty[round(mean.Kobe, 1) * 10 + 1, round(range.Kobe,1) * 10 + 1])
suitability.Manila = c(I.cummulative.zero.mintemp[which(oscillation.temp == round(mean.Manila, 1)), which(amplitude == round(range.Manila,1))],
I.cummulative.zero.meantemp[which(oscillation.temp == round(mean.Manila, 1)), which(amplitude == round(range.Manila,1))],
I.cummulative.zero.maxtemp[which(oscillation.temp == round(mean.Manila, 1)), which(amplitude == round(range.Manila,1))],
I.cummulative.twenty[which(oscillation.temp == round(mean.Manila, 1)), which(amplitude == round(range.Manila,1))],
I.cummulative.forty[which(oscillation.temp == round(mean.Manila, 1)), which(amplitude == round(range.Manila,1))],
I.cummulative.sixty[which(oscillation.temp == round(mean.Manila, 1)), which(amplitude == round(range.Manila,1))],
I.cummulative.eighty[which(oscillation.temp == round(mean.Manila, 1)), which(amplitude == round(range.Manila,1))])
suitability.NY = c(I.cummulative.zero.mintemp[which(oscillation.temp == round(mean.NY, 1)), which(amplitude == round(range.NY,1))],
I.cummulative.zero.meantemp[which(oscillation.temp == round(mean.NY, 1)), which(amplitude == round(range.NY,1))],
I.cummulative.zero.maxtemp[which(oscillation.temp == round(mean.NY, 1)), which(amplitude == round(range.NY,1))],
I.cummulative.twenty[which(oscillation.temp == round(mean.NY, 1)), which(amplitude == round(range.NY,1))],
I.cummulative.forty[which(oscillation.temp == round(mean.NY, 1)), which(amplitude == round(range.NY,1))],
I.cummulative.sixty[which(oscillation.temp == round(mean.NY, 1)), which(amplitude == round(range.NY,1))],
I.cummulative.eighty[which(oscillation.temp == round(mean.NY, 1)), which(amplitude == round(range.NY,1))])
suitability.BuenosAires
suitability.BeloHorizonte
suitability.Recife
suitability.Guangzhou
suitability.Bogota
suitability.Medellin
suitability.Delhi
suitability.Kobe
image.plot(oscillation.temp[oscillation.indices], amplitude[amplitude.indices], (I.cummulative.zero.maxtemp[oscillation.indices, amplitude.indices] + I.cummulative.zero.meantemp[oscillation.indices, amplitude.indices] + I.cummulative.zero.mintemp[oscillation.indices, amplitude.indices])/3,
xlab = 'Oscillation Mean Temperature (°C)', ylab = 'Amplitude (°C)', legend.lab = 'Epidemic Suitability', zlim = c(0,1.0))
rm(list=ls())
## declare and initialize necessary variables
oscillation.temp = seq(from = 0.0, to = 40.0, by = 0.1)
amplitude = seq(from = 0.0, to = 20.0, by = 0.1)
header = '~/Box Sync/Vector-borne disease/data/amplitude_oscillation/uncertainty/output_'
extension = '.txt'
## access data
uncertainty.finalepidemicsize = list()
pb <- txtProgressBar(min = 0, max = 50, style = 3)
for(n in 1:50)
{
I.cummulative = matrix(nrow = length(oscillation.temp), ncol = length(amplitude))
for(ii in 1:length(oscillation.temp)){
for(jj in 1:length(amplitude)){
filename = paste(header, round(oscillation.temp[ii],digits=1), extension, sep='')
output = read.table(filename, quote = "\"", comment.char="")
I.cummulative[ii, jj] = output[jj, 1]
}
}
uncertainty.finalepidemicsize[[n]] = I.cummulative
setTxtProgressBar(pb, n)
}
filename
I.cummulative = read.table(file = filename, quote = "\"", comment.char = "")
filename = ~/Box Sync/Vector-borne disease/data/amplitude_oscillation/uncertainty/output_0.txt"
filename = "~/Box Sync/Vector-borne disease/data/amplitude_oscillation/uncertainty/output_0.txt"
I.cummulative = read.table(file = filename, quote = "\"", comment.char = "")
View(I.cummulative)
uncertainty.finalepidemicsize = list()
pb <- txtProgressBar(min = 0, max = 50, style = 3)
for(n in 1:50)
{
filename = paste(header, n, extension, sep = '')
output = read.table(filename, quote = "\"", comment.char="")
uncertainty.finalepidemicsize[[n]] = output
setTxtProgressBar(pb, n)
}
for(n in 0:49)
{
filename = paste(header, n, extension, sep = '')
output = read.table(filename, quote = "\"", comment.char="")
uncertainty.finalepidemicsize[[n]] = output
setTxtProgressBar(pb, n)
}
for(n in 0:49)
{
filename = paste(header, n, extension, sep = '')
output = read.table(filename, quote = "\"", comment.char="")
uncertainty.finalepidemicsize[[n+1]] = output
setTxtProgressBar(pb, n)
}
## access data
uncertainty.finalepidemicsize = list()
pb <- txtProgressBar(min = 0, max = 50, style = 3)
for(n in 0:49)
{
filename = paste(header, n, extension, sep = '')
output = read.table(filename, quote = "\"", comment.char="")
uncertainty.finalepidemicsize[[n+1]] = output
setTxtProgressBar(pb, n+1)
}
uncertainty.finalepidemicsize = list()
N = 10000
pb <- txtProgressBar(min = 0, max = 50, style = 3)
for(n in 0:49)
{
filename = paste(header, n, extension, sep = '')
output = read.table(filename, quote = "\"", comment.char="")
uncertainty.finalepidemicsize[[n+1]] = output / N
setTxtProgressBar(pb, n+1)
}
oscillation.indices= seq(from = which(oscillation.temp == 10), to = which(oscillation.temp == 38), by = 1)
amplitude.indices = seq(from = 1, to = which(amplitude == 17), by = 1)
image.plot(oscillation.temp[oscillation.indices], amplitude[amplitude.indices], uncertainty.finalepidemicsize[[1]][oscillation.indices, amplitude.indices],
xlab = 'Oscillation Mean Temperature (°C)', ylab = 'Amplitude (°C)', legend.lab = 'Epidemic Suitability', zlim = c(0,1.0))
typeof(uncertainty.finalepidemicsize[[1]])
uncertainty.finalepidemicsize = list()
N = 10000
pb <- txtProgressBar(min = 0, max = 50, style = 3)
for(n in 0:49)
{
filename = paste(header, n, extension, sep = '')
output = as.matrix(unlist(read.table(filename, quote = "\"", comment.char="")))
uncertainty.finalepidemicsize[[n+1]] = output / N
setTxtProgressBar(pb, n+1)
}
dim(uncertainty.finalepidemicsize[[1]])
?as.matrix()
uncertainty.finalepidemicsize = list()
N = 10000
pb <- txtProgressBar(min = 0, max = 50, style = 3)
for(n in 0:49)
{
filename = paste(header, n, extension, sep = '')
output = matrix(unlist(read.table(filename, quote = "\"", comment.char="")),nrow = 401, ncol = 201, byrow = TRUE)
uncertainty.finalepidemicsize[[n+1]] = output / N
setTxtProgressBar(pb, n+1)
}
warnings()
length(oscillation.temp)
length(amplitude)
uncertainty.finalepidemicsize = list()
N = 10000
pb <- txtProgressBar(min = 0, max = 50, style = 3)
for(n in 0:49)
{
filename = paste(header, n, extension, sep = '')
output = matrix(unlist(read.table(filename, quote = "\"", comment.char="")),nrow = 401, ncol = 301, byrow = TRUE)
uncertainty.finalepidemicsize[[n+1]] = output / N
setTxtProgressBar(pb, n+1)
}
dim(uncertainty.finalepidemicsize[[1]])
oscillation.temp = seq(from = 0.0, to = 40.0, by = 0.1)
amplitude = seq(from = 0.0, to = 30.0, by = 0.1)
oscillation.indices= seq(from = which(oscillation.temp == 10), to = which(oscillation.temp == 38), by = 1)
amplitude.indices = seq(from = 1, to = which(amplitude == 17), by = 1)
image.plot(oscillation.temp[oscillation.indices], amplitude[amplitude.indices], uncertainty.finalepidemicsize[[1]][oscillation.indices, amplitude.indices],
xlab = 'Oscillation Mean Temperature (°C)', ylab = 'Amplitude (°C)', legend.lab = 'Epidemic Suitability', zlim = c(0,1.0))
image.plot(oscillation.temp[oscillation.indices], amplitude[amplitude.indices], uncertainty.finalepidemicsize[[25]][oscillation.indices, amplitude.indices],
xlab = 'Oscillation Mean Temperature (°C)', ylab = 'Amplitude (°C)', legend.lab = 'Epidemic Suitability', zlim = c(0,1.0))
image.plot(oscillation.temp[oscillation.indices], amplitude[amplitude.indices], uncertainty.finalepidemicsize[[50]][oscillation.indices, amplitude.indices],
xlab = 'Oscillation Mean Temperature (°C)', ylab = 'Amplitude (°C)', legend.lab = 'Epidemic Suitability', zlim = c(0,1.0))
filename
dat = scan(filename)
dim(Dat)
dim(dat)
dat = matrix(dat, nrow = 401, ncol = 301)
image(dat)
dat = scan(filename)
dat = matrix(dat, nrow = 401, ncol = 301, byrow = FALSE)
image(dat)
plot(1:301, dat[101,])
plot(1:301, dat[101,], type = 'l')
plot(1:301, dat[301,], type = 'l')
plot(1:301, dat[201,], type = 'l')
plot(1:401, dat[,1], type = 'l')
plot(1:401, dat[,101], type = 'l')
plot(1:401, dat[,202], type = 'l')
I.cummulative[201,]
plot(1:301, I.cummulative[201,])
plot(1:301, I.cummulative[201,], type = 'l')
image(I.cummulative)
as.matrix(unlist(I.cummulative))
as.matrix(unlist(I.cummulative), nrow = 401, ncol =301)
image(as.matrix(unlist(I.cummulative), nrow = 401, ncol = 301)
)
dat = as.matrix(unlist(I.cummulative), nrow = 401, ncol = 301)
plot(1:301, I.cummulative[201,])
plot(1:301, I.cummulative[201,], type = 'l', col = 'blue')
lines(1:301, I.cummulative[201,], col = 'red')
plot(1:301, I.cummulative[201,], type = 'l', col = 'blue')
lines(1:301, dat[201,], col = 'red')
dim(dat)
dat = matrix(unlist(I.cummulative), nrow = 401, ncol = 301)
plot(1:301, I.cummulative[201,], type = 'l', col = 'blue')
lines(1:301, dat[201,], col = 'red')
image(dat)
## access data
uncertainty.finalepidemicsize = list()
N = 10000
pb <- txtProgressBar(min = 0, max = 50, style = 3)
for(n in 0:49)
{
filename = paste(header, n, extension, sep = '')
output = matrix(unlist(scan(filename)),nrow = 401, ncol = 301))
uncertainty.finalepidemicsize[[n+1]] = output / N
setTxtProgressBar(pb, n+1)
}
uncertainty.finalepidemicsize = list()
N = 10000
pb <- txtProgressBar(min = 0, max = 50, style = 3)
for(n in 0:49)
{
filename = paste(header, n, extension, sep = '')
output = matrix(unlist(scan(filename)),nrow = 401, ncol = 301)
uncertainty.finalepidemicsize[[n+1]] = output / N
setTxtProgressBar(pb, n+1)
}
dim(uncertainty.finalepidemicsize[[1]])
image.plot(oscillation.temp[oscillation.indices], amplitude[amplitude.indices], uncertainty.finalepidemicsize[[50]][oscillation.indices, amplitude.indices],
xlab = 'Oscillation Mean Temperature (°C)', ylab = 'Amplitude (°C)', legend.lab = 'Epidemic Suitability', zlim = c(0,1.0))
image(uncertainty.finalepidemicsize[[1]])
filename
filename = "~/Box Sync/Vector-borne disease/data/amplitude_oscillation/uncertainty/output_0.txt"
dat = scan(filename)
typeof(dat)
## access data
uncertainty.finalepidemicsize = list()
N = 10000
pb <- txtProgressBar(min = 0, max = 50, style = 3)
for(n in 0:49)
{
filename = paste(header, n, extension, sep = '')
output = matrix(unlist(read.table(filename, quote = "\"", comment.char="")),nrow = 401, ncol = 301))
uncertainty.finalepidemicsize[[n+1]] = output / N
setTxtProgressBar(pb, n+1)
}
uncertainty.finalepidemicsize = list()
N = 10000
pb <- txtProgressBar(min = 0, max = 50, style = 3)
for(n in 0:49)
{
filename = paste(header, n, extension, sep = '')
output = matrix(unlist(read.table(filename, quote = "\"", comment.char="")),nrow = 401, ncol = 301)
uncertainty.finalepidemicsize[[n+1]] = output / N
setTxtProgressBar(pb, n+1)
}
plot(uncertainty.finalepidemicsize[[1]][201,])
image.plot(oscillation.temp[oscillation.indices], amplitude[amplitude.indices], uncertainty.finalepidemicsize[[50]][oscillation.indices, amplitude.indices],
xlab = 'Oscillation Mean Temperature (°C)', ylab = 'Amplitude (°C)', legend.lab = 'Epidemic Suitability', zlim = c(0,1.0))
image.plot(oscillation.temp[oscillation.indices], amplitude[amplitude.indices], uncertainty.finalepidemicsize[[30]][oscillation.indices, amplitude.indices],
xlab = 'Oscillation Mean Temperature (°C)', ylab = 'Amplitude (°C)', legend.lab = 'Epidemic Suitability', zlim = c(0,1.0))
image.plot(oscillation.temp[oscillation.indices], amplitude[amplitude.indices], uncertainty.finalepidemicsize[[20]][oscillation.indices, amplitude.indices],
xlab = 'Oscillation Mean Temperature (°C)', ylab = 'Amplitude (°C)', legend.lab = 'Epidemic Suitability', zlim = c(0,1.0))
image.plot(oscillation.temp[oscillation.indices], amplitude[amplitude.indices], uncertainty.finalepidemicsize[[10]][oscillation.indices, amplitude.indices],
xlab = 'Oscillation Mean Temperature (°C)', ylab = 'Amplitude (°C)', legend.lab = 'Epidemic Suitability', zlim = c(0,1.0))
image.plot(oscillation.temp[oscillation.indices], amplitude[amplitude.indices], uncertainty.finalepidemicsize[[9]][oscillation.indices, amplitude.indices],
xlab = 'Oscillation Mean Temperature (°C)', ylab = 'Amplitude (°C)', legend.lab = 'Epidemic Suitability', zlim = c(0,1.0))
image.plot(oscillation.temp[oscillation.indices], amplitude[amplitude.indices], uncertainty.finalepidemicsize[[2]][oscillation.indices, amplitude.indices],
xlab = 'Oscillation Mean Temperature (°C)', ylab = 'Amplitude (°C)', legend.lab = 'Epidemic Suitability', zlim = c(0,1.0))
image.plot(oscillation.temp[oscillation.indices], amplitude[amplitude.indices], uncertainty.finalepidemicsize[[3]][oscillation.indices, amplitude.indices],
xlab = 'Oscillation Mean Temperature (°C)', ylab = 'Amplitude (°C)', legend.lab = 'Epidemic Suitability', zlim = c(0,1.0))
image.plot(oscillation.temp[oscillation.indices], amplitude[amplitude.indices], uncertainty.finalepidemicsize[[4]][oscillation.indices, amplitude.indices],
xlab = 'Oscillation Mean Temperature (°C)', ylab = 'Amplitude (°C)', legend.lab = 'Epidemic Suitability', zlim = c(0,1.0))
arr <- array(unlist(uncertainty.finalepidemicsize), c(401,301,50) )
image(apply( arr , 1:2 , mean ))
image(rowMeans(arr, dim = 2))
for(ii in 1:50)
{}
image.plot(oscillation.temp[oscillation.indices], amplitude[amplitude.indices], uncertainty.finalepidemicsize[[3]][oscillation.indices, amplitude.indices],
xlab = 'Oscillation Mean Temperature (°C)', ylab = 'Amplitude (°C)', legend.lab = 'Epidemic Suitability', zlim = c(0,1.0))
image.plot(oscillation.temp[oscillation.indices], amplitude[amplitude.indices], uncertainty.finalepidemicsize[[17]][oscillation.indices, amplitude.indices],
xlab = 'Oscillation Mean Temperature (°C)', ylab = 'Amplitude (°C)', legend.lab = 'Epidemic Suitability', zlim = c(0,1.0))
sum.finalepidemic = matrix(0, nrow = 401, ncol = 301)
uncertainty.finalepidemicsize = list()
sum.finalepidemic = matrix(0, nrow = 401, ncol = 301)
N = 10000
pb <- txtProgressBar(min = 0, max = 50, style = 3)
for(n in 0:49)
{
filename = paste(header, n, extension, sep = '')
output = matrix(unlist(read.table(filename, quote = "\"", comment.char="")),nrow = 401, ncol = 301)
sum = sum + output/N
uncertainty.finalepidemicsize[[n+1]] = output / N
setTxtProgressBar(pb, n+1)
}
sum
uncertainty.finalepidemicsize = list()
sum.finalepidemicsize = matrix(0, nrow = 401, ncol = 301)
N = 10000
pb <- txtProgressBar(min = 0, max = 50, style = 3)
for(n in 0:49)
{
filename = paste(header, n, extension, sep = '')
output = matrix(unlist(read.table(filename, quote = "\"", comment.char="")),nrow = 401, ncol = 301)
sum.finalepidemicsize = sum.finalepidemicsize + output / N
uncertainty.finalepidemicsize[[n+1]] = output / N
setTxtProgressBar(pb, n+1)
}
image(sum.finalepidemic / 50)
uncertainty.finalepidemicsize = list()
N = 10000
pb <- txtProgressBar(min = 0, max = 50, style = 3)
for(n in 0:49)
{
filename = paste(header, n, extension, sep = '')
output = matrix(unlist(read.table(filename, quote = "\"", comment.char="")),nrow = 401, ncol = 301)
uncertainty.finalepidemicsize[[n+1]] = output / N
setTxtProgressBar(pb, n+1)
}
sum.finalepidemicsize = matrix(0, nrow = 401, ncol = 301)
for(n in 1:50)
{
sum.finalepidemic = sum.finalepidemic + uncertainty.finalepidemicsize[[n]]
}
sum.finalepidemicsize
uncertainty.finalepidemicsize[[1]]
uncertainty.finalepidemicsize[[2]]
sum.finalepidemicsize = matrix(0, nrow = 401, ncol = 301)
for(n in 1:50)
{
sum.finalepidemicsize = sum.finalepidemicsize + uncertainty.finalepidemicsize[[n]]
}
sum.finalepidemic
image(sum.finalepidemic)
image(sum.finalepidemic/50)
image(sum.finalepidemicsize)
image(sum.finalepidemicsize/N)
image.plot(oscillation.temp[oscillation.indices], amplitude[amplitude.indices], sum.finalepidemicsize[oscillation.indices, amplitude.indices]/ 50,
xlab = 'Oscillation Mean Temperature (°C)', ylab = 'Amplitude (°C)', legend.lab = 'Epidemic Suitability', zlim = c(0,1.0))
arr <- array(unlist(uncertainty.finalepidemicsize), c(401,301,50) )
image(apply(arr, 3, mean))
dim(Arr)
dim(arr)
image(apply(arr, c(1,2), mean))
image.plot(oscillation.temp[oscillation.indices], amplitude[amplitude.indices], apply(arr, c(1,2), mean)[oscillation.indices, amplitude.indices],
xlab = 'Oscillation Mean Temperature (°C)', ylab = 'Amplitude (°C)', legend.lab = 'Epidemic Suitability', zlim = c(0,1.0))
image.plot(oscillation.temp[oscillation.indices], amplitude[amplitude.indices], apply(arr, c(1,2), sd)[oscillation.indices, amplitude.indices],
xlab = 'Oscillation Mean Temperature (°C)', ylab = 'Amplitude (°C)', legend.lab = 'Epidemic Suitability', zlim = c(0,1.0))
mean <- apply(arr, c(1,2), mean)
sd <- apply(arr, c(1,2), mean)
image.plot(oscillation.temp[oscillation.indices], amplitude[amplitude.indices], (mean + sd)[oscillation.indices, amplitude.indices],
xlab = 'Oscillation Mean Temperature (°C)', ylab = 'Amplitude (°C)', legend.lab = 'Epidemic Suitability', zlim = c(0,1.0))
sd
image.plot(oscillation.temp[oscillation.indices], amplitude[amplitude.indices], sd[oscillation.indices, amplitude.indices],
xlab = 'Oscillation Mean Temperature (°C)', ylab = 'Amplitude (°C)', legend.lab = 'Epidemic Suitability', zlim = c(0,1.0))
image.plot(oscillation.temp[oscillation.indices], amplitude[amplitude.indices], mean[oscillation.indices, amplitude.indices]+sd[oscillation.indices, amplitude.indices],
xlab = 'Oscillation Mean Temperature (°C)', ylab = 'Amplitude (°C)', legend.lab = 'Epidemic Suitability', zlim = c(0,1.0))
image.plot(oscillation.temp[oscillation.indices], amplitude[amplitude.indices], mean[oscillation.indices, amplitude.indices]-sd[oscillation.indices, amplitude.indices],
xlab = 'Oscillation Mean Temperature (°C)', ylab = 'Amplitude (°C)', legend.lab = 'Epidemic Suitability', zlim = c(0,1.0))
image.plot(oscillation.temp[oscillation.indices], amplitude[amplitude.indices], mean[oscillation.indices, amplitude.indices],
xlab = 'Oscillation Mean Temperature (°C)', ylab = 'Amplitude (°C)', legend.lab = 'Epidemic Suitability', zlim = c(0,1.0))
?quantile()
min.quantile = apply(arr, c(1,2), quantile, 0.025)
min.quantile = apply(arr, c(1,2), quantile, 0.025, na.rm = TRUE)
image.plot(oscillation.temp[oscillation.indices], amplitude[amplitude.indices], min.quantile[oscillation.indices, amplitude.indices],
xlab = 'Oscillation Mean Temperature (°C)', ylab = 'Amplitude (°C)', legend.lab = 'Epidemic Suitability', zlim = c(0,1.0))
median.quantile = apply(arr, c(1,2), quantile, 0.50, nar.rm = TRUE)
median.quantile = apply(arr, c(1,2), quantile, 0.50, na.rm = TRUE)
max.quantile = apply(arr, c(1,2), quantile, 0.975, na.rm = TRUE)
image.plot(oscillation.temp[oscillation.indices], amplitude[amplitude.indices], median.quantile[oscillation.indices, amplitude.indices],
xlab = 'Oscillation Mean Temperature (°C)', ylab = 'Amplitude (°C)', legend.lab = 'Epidemic Suitability', zlim = c(0,1.0))
image.plot(oscillation.temp[oscillation.indices], amplitude[amplitude.indices], max.quantile[oscillation.indices, amplitude.indices],
xlab = 'Oscillation Mean Temperature (°C)', ylab = 'Amplitude (°C)', legend.lab = 'Epidemic Suitability', zlim = c(0,1.0))
